/**
 * 多态，也称动态绑定，后期绑定或运行时绑定。必要条件：继承、重写、向上转型。
 * 多态是在继承的基础上实现的。多态的三个要素：继承、重写和父类引用指向子类对象。
 * 父类引用指向不同的子类对象时，调用相同的方法，呈现出不同的行为；就是类多态特性。多态可以分成编译时多态和运行时多态。
 * 分离做什么和怎么做，将接口和实现分离开来。多态不但能够改善代码的组织结构和可读性，还能创建可扩展的程序。
 * 消除类型之间的耦合关系
 *
 * 封装通过合并特征和行为来创建新的数据类型。实现隐藏则通过将细节私有化把接口和实现分离开来。
 */
package bases.polymorphism;